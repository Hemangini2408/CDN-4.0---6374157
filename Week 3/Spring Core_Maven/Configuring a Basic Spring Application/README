# 📚 LibraryManagement Spring Application

This is a basic **Spring Framework** project configured using **XML-based configuration**. It demonstrates how to create and wire service and repository beans using Spring's IoC container.

## 🧩 Features

- Java-based classes for `BookService` and `BookRepository`
- Spring XML configuration (`applicationContext.xml`)
- Demonstrates dependency injection using `<bean>` and `<property>`
- Simple Maven project structure
- Runs with a single main method (`MainApp.java`)

---

## 📁 Project Structure

```

LibraryManagement/
├── src/
│   ├── main/
│   │   ├── java/
│   │   │   └── com/
│   │   │       └── library/
│   │   │           ├── MainApp.java
│   │   │           ├── service/
│   │   │           │   └── BookService.java
│   │   │           └── repository/
│   │   │               └── BookRepository.java
│   │   └── resources/
│   │       └── applicationContext.xml
└── pom.xml

````


## 🚀 Getting Started

### 1. Clone the repository
```bash
git clone https://github.com/yourusername/LibraryManagement.git
cd LibraryManagement
````

### 2. Import into IDE

* Open in **Eclipse** or **IntelliJ IDEA** as a **Maven project**

### 3. Build the project

```bash
mvn clean install
```

### 4. Run the Application

Run `MainApp.java` from your IDE or configure a Maven exec plugin to run it.

---

## ⚙️ applicationContext.xml Overview

```xml
<bean id="bookRepository" class="com.library.repository.BookRepository" />
<bean id="bookService" class="com.library.service.BookService">
    <property name="bookRepository" ref="bookRepository"/>
</bean>
```

---

## 🧪 Output (when running MainApp)

```
BookService: Adding book - Spring in Action
BookRepository: Saving book - Spring in Action
```

---

